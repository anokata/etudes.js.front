{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","startIndex","Array","fill","map","e","renderSquare","board","push","makeRow3","makeBoard3","React","Component","Game","state","history","move","xIsNext","stepNumber","slice","length","calculateWinner","setState","concat","getMoveDesc","index","row","Math","ceil","col","current","winner","status","moves","step","label","jumpTo","handleClick","LifeList","input","a","b","c","ReactDOM","render","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.643f497a.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button \r\n      className=\"square\" \r\n      onClick={props.onClick}\r\n    >\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n  renderSquare(i) {\r\n    return <Square  key={i}\r\n      value={this.props.squares[i]} \r\n      onClick={()=>this.props.onClick(i)}\r\n    />;\r\n  }\r\n\r\n  makeRow3(startIndex) {\r\n    return Array(3).fill(null).map((e, i) => {\r\n        return this.renderSquare(i + startIndex);\r\n      });\r\n  }\r\n\r\n  makeBoard3() {\r\n    const board = [];\r\n    for (const i of [0,3,6]) {\r\n      board.push(<div className=\"board-row\" key={i}>{this.makeRow3(i)}</div>);\r\n    }\r\n    return board;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.makeBoard3()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{ \r\n        squares: Array(9).fill(null),\r\n        move: \"(start)\",\r\n      }],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n    }\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length-1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) \r\n      return;\r\n\r\n    squares[i] = 'X';\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({ \r\n      history: history.concat([{\r\n        squares: squares,\r\n        move: this.getMoveDesc(i),\r\n      }]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: history.length,\r\n    });\r\n  }\r\n  \r\n  getCurrent() {\r\n    const history = this.state.history;\r\n    const current = history[history.length-1];\r\n    return current;\r\n  }\r\n\r\n  jumpTo(index) {\r\n    this.setState({\r\n      stepNumber: index,\r\n      xIsNext: (index % 2) === 0,\r\n    });\r\n  }\r\n\r\n  getMoveDesc(index) {\r\n    index++;\r\n    const row = Math.ceil(index / 3);\r\n    const col = (index-1) % 3 + 1;\r\n    return `(${row}:${col})`;\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    let status = \"\";\r\n\r\n    if (winner) {\r\n      status = `Win: ${winner}`\r\n    } else {\r\n      status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\r\n    }\r\n\r\n    const moves = history.map((step, index) => {\r\n      const label = index ? `Go to step #${index}` : \"Go to start\";\r\n      const move = step.move;\r\n      return (\r\n        <li key={index}>\r\n          <button className={this.state.stepNumber === index ? \"selected\" : \"\"} onClick={() => {this.jumpTo(index)}}>{label} {move}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board \r\n            squares={current.squares}\r\n            onClick={(i) => {this.handleClick(i)}}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <h3>{status}</h3>\r\n          <h4>Steps: {this.state.stepNumber}</h4>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n        <LifeList input=\"[some]\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass LifeList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"list\">\r\n        <ul>input = {this.props.input}.\r\n          <li>001</li>\r\n          <li>002</li>\r\n          <li>003</li>\r\n          <li>004</li>\r\n          <li>005</li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let e of lines) {\r\n    const [a, b, c] = e;\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  };\r\n  return null;\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\nconsole.log('start');\r\n"],"sourceRoot":""}