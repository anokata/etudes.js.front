{"version":3,"sources":["index.js"],"names":["Square","props","className","winnerClass","onClick","value","Board","i","this","squares","winner","moves","includes","startIndex","Array","fill","map","e","renderSquare","board","push","makeRow3","makeBoard3","React","Component","Game","state","history","move","xIsNext","stepNumber","sortAsc","setState","slice","length","calculateWinner","concat","getMoveDesc","index","row","Math","ceil","col","current","status","isDraw","step","label","jumpTo","reverse","handleClick","type","defaultChecked","onChange","sortChange","LifeList","input","a","b","c","ReactDOM","render","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.27b8617f.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button \r\n      className={`square ${props.winnerClass}`}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n  renderSquare(i) {\r\n    return <Square  key={i}\r\n      value={this.props.squares[i]} \r\n      onClick={()=>this.props.onClick(i)}\r\n      winnerClass={(this.props.winner) ? ((this.props.winner.moves.includes(i)) ? \"winner\" : \"\") : \"\"}\r\n    />;\r\n  }\r\n\r\n  makeRow3(startIndex) {\r\n    return Array(3).fill(null).map((e, i) => {\r\n        return this.renderSquare(i + startIndex);\r\n      });\r\n  }\r\n\r\n  makeBoard3() {\r\n    const board = [];\r\n    for (const i of [0,3,6]) {\r\n      board.push(<div className=\"board-row\" key={i}>{this.makeRow3(i)}</div>);\r\n    }\r\n    return board;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.makeBoard3()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{ \r\n        squares: Array(9).fill(null),\r\n        move: \"(start)\",\r\n      }],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n      sortAsc: true,\r\n    }\r\n  }\r\n\r\n  sortChange(e) {\r\n    this.setState({\r\n      sortAsc: !this.state.sortAsc,\r\n    });\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length-1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) \r\n      return;\r\n\r\n    squares[i] = 'X';\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({ \r\n      history: history.concat([{\r\n        squares: squares,\r\n        move: this.getMoveDesc(i),\r\n      }]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: history.length,\r\n    });\r\n  }\r\n  \r\n  getCurrent() {\r\n    const history = this.state.history;\r\n    const current = history[history.length-1];\r\n    return current;\r\n  }\r\n\r\n  jumpTo(index) {\r\n    this.setState({\r\n      stepNumber: index,\r\n      xIsNext: (index % 2) === 0,\r\n    });\r\n  }\r\n\r\n  getMoveDesc(index) {\r\n    index++;\r\n    const row = Math.ceil(index / 3);\r\n    const col = (index-1) % 3 + 1;\r\n    return `(${row}:${col})`;\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    let status = \"\";\r\n\r\n    if (winner) {\r\n      status = `Win: ${winner.winner}, cells:${winner.moves}`\r\n    } else if (isDraw(current.squares)) {\r\n      status = 'Draw. no is winner. endgame.'\r\n    } else {\r\n      status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\r\n    }\r\n\r\n    let moves = history.map((step, index) => {\r\n      const label = index ? `Go to step #${index}` : \"Go to start\";\r\n      const move = step.move;\r\n      return (\r\n        <li key={index}>\r\n          <button className={this.state.stepNumber === index ? \"selected\" : \"\"} onClick={() => {this.jumpTo(index)}}>{label} {move}</button>\r\n        </li>\r\n      );\r\n    });\r\n    if (!this.state.sortAsc) moves = moves.reverse();\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board \r\n            squares={current.squares}\r\n            winner={winner}\r\n            onClick={(i) => {this.handleClick(i)}}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <h3>{status}</h3>\r\n          <h4>Steps: {this.state.stepNumber}</h4>\r\n          <ol>{moves}</ol>\r\n          Sort acending: <input type=\"checkbox\" defaultChecked onChange={(e)=>this.sortChange(e)}></input>\r\n        </div>\r\n        <LifeList input=\"[some]\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass LifeList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"list\">\r\n        <ul>input = {this.props.input}.\r\n          <li>001</li>\r\n          <li>002</li>\r\n          <li>003</li>\r\n          <li>004</li>\r\n          <li>005</li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nfunction isDraw(squares) {\r\n  for (let el of squares) {\r\n    if (!el) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let e of lines) {\r\n    const [a, b, c] = e;\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return {\r\n        winner: squares[a],\r\n        moves: e,\r\n      };\r\n    }\r\n  };\r\n  return null;\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\nconsole.log('start');\r\n"],"sourceRoot":""}